#map_type: voxel
#map_type: costmap      #导航包所需要的传感器   原始被注释掉的


#robot_radius: 0.25

footprint: [[0.27,0.25],[0.25,0],[0.27,-0.25],[-0.27, -0.25],[-0.27,0.25]]   #车的数据   长宽高     设定的是长0.54m     宽为0.44m     高为0.25      
recovery_behavior_enabled: true

controller_frequency: 25     #原始为5

obstacle_layer:
  enabled:              true
  combination_method:   1
  track_unknown_space:  false
  origin_z: 0.0
  z_voxels: 20
  z_resolution: 0.1
  unknown_cost_value: 0
  unknown_threshold: 8
  mark_threshold: 0
  publish_voxel_map: false



  obstacle_range: 6.0   #用于障碍物探测   比如 ：值为6.0，意味着检测到距离小于6米的障碍物时，就会引入代价地图
  raytrace_range: 7.0    #用于清除障碍物  比如 ：值为7.0，意味着清除代价地图中7米以外的障碍物



  #footprint: [[-0.3,-0.4],[-0.3,1.03],[-0.0,1.03],[0.3, 1.03],[0.3,-0.4]]
  #robot_radius: 0.25

  
  inflation_radius: 0.25      #膨胀半径，扩展在碰撞区以外的代价区域，使得机器人规划路径避开障碍物    原始为0.25

  #inf_is_valid: true
  max_obstacle_height: 0.40
  min_obstacle_height: 0.03
  controller_frequency: 5

  observation_sources: scan   #导航包所需要的传感器
  #point_cloud_sensor

  scan: {sensor_frame: base_link,  observation_persistence: 0.0, 
  max_obstacle_height: 0.3, min_obstacle_height: 0.05, data_type: LaserScan, topic: /scan, 
  marking: true,clearing: true}

inflation_layer:
 enabled:              true

 
 cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10) 代价比例系数，越大则代价值越小   原始为5
 inflation_radius:     0.25  # max. distance from an obstacle at which costs are incurred for planning paths.  膨胀半径，扩展在碰撞区以外的代价区域，使得机器人规划路径避开障碍物     原始为0.25


static_layer:
 enabled: true

